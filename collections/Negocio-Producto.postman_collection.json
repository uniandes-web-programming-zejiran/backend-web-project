{
	"info": {
		"_postman_id": "1b6ffd49-e325-460c-85e0-6cc67580b03b",
		"name": "Negocio-Producto",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25914771"
	},
	"item": [
		{
			"name": "Agregar negocio",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"negocio_id\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"nombre\": \"FrutiEcologica\",\r\n   \"descripcion\": \"Tienda de frutas ecologica y sostenible con el ambiente.\",\r\n   \"tipo\": \"Alimentos\",\r\n   \"ubicacion\": \"Calle 36 #28-16\",\r\n   \"fechaCreacion\": \"20 de Agosto del 2022\",\r\n   \"imagen\": \"www.negocios.com/negocio.png\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/negocios",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"negocios"
					]
				},
				"description": "Esta peticion agrega un negocio."
			},
			"response": [
				{
					"name": "Agregar negocio",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"48a9ab90-1276-11ed-861d\",\r\n   \"nombre\": \"FrutiEcologica\",\r\n   \"descripcion\": \"Tienda de frutas ecologica y sostenible con el ambiente.\",\r\n   \"tipo\": \"Alimentos\",\r\n   \"ubicacion\": \"Calle 36 #28-16\",\r\n   \"fechaCreacion\": \"20 de Agosto del 2022\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/negocios",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"negocios"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Agregar producto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"producto_id\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"nombre\": \"Huevos ecologicos\",\r\n   \"precio\": 20,\r\n   \"stock\": 70,\r\n   \"categoria\": \"Alimentos\",\r\n   \"imagen\": \"www.imagenHuevos.com/huevos.png\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/productos",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"productos"
					]
				}
			},
			"response": [
				{
					"name": "Agregar producto",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"37461718\",\r\n   \"nombre\": \"Huevos ecologicos\",\r\n   \"precio\": 20,\r\n   \"stock\": 70,\r\n   \"categoria\": \"Alimentos\",\r\n   \"imagen\": \"www.imagenHuevos.com/huevos.png\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/productos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"productos"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Agregar producto 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"producto_id2\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"nombre\": \"Huevos ecologicos\",\r\n   \"precio\": 20,\r\n   \"stock\": 70,\r\n   \"categoria\": \"Alimentos\",\r\n   \"imagen\": \"www.imagenHuevos.com/huevos.png\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/productos",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"productos"
					]
				}
			},
			"response": [
				{
					"name": "Agregar producto",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"37461718\",\r\n   \"nombre\": \"Huevos ecologicos\",\r\n   \"precio\": 20,\r\n   \"stock\": 70,\r\n   \"categoria\": \"Alimentos\",\r\n   \"imagen\": \"www.imagenHuevos.com/huevos.png\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/productos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"productos"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Agregar producto a negocio",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/negocios/{{negocio_id}}/productos/{{producto_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"negocios",
						"{{negocio_id}}",
						"productos",
						"{{producto_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Agregar producto a negocio",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"48a9ab90-1276-11ed-861d\",\r\n   \"nombre\": \"FrutiEcologica\",\r\n   \"descripcion\": \"Tienda de frutas ecologica y sostenible con el ambiente.\",\r\n   \"tipo\": \"Alimentos\",\r\n   \"ubicacion\": \"Calle 36 #28-16\",\r\n   \"fechaCreacion\": \"20 de Agosto del 2022\",\r\n   \"productos\":[\r\n        {\r\n            \"id\": \"37461718\",\r\n            \"nombre\": \"Huevos ecologicos\",\r\n            \"precio\": 20,\r\n            \"stock\": 70,\r\n            \"categoria\": \"Alimentos\",\r\n            \"imagen\": \"www.imagenHuevos.com/huevos.png\"\r\n        }\r\n   ],\r\n   \"eventos\": []\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/negocios/{{negocio_id}}/productos/{{producto_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"negocios",
								"{{negocio_id}}",
								"productos",
								"{{producto_id}}"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Agregar producto que no existe a un negocio",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El producto con el id dado no fue encontrado\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/negocios/{{negocio_id}}/productos/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"negocios",
						"{{negocio_id}}",
						"productos",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Agregar producto que no existe a un negocio",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"statusCode\": 404,\r\n   \"message\": \"El producto no existe\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/negocios/{{negocio_id}}/productos/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"negocios",
								"{{negocio_id}}",
								"productos",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Agregar producto a negocio que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El negocio con el id dado no fue encontrado\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/negocios/00000000-0000-0000-0000-000000000000/productos/{{producto_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"negocios",
						"00000000-0000-0000-0000-000000000000",
						"productos",
						"{{producto_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Agregar producto a negocio que no existe",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"statusCode\": 404,\r\n   \"message\": \"El negocio no existe\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/negocios/00000000-0000-0000-0000-000000000000/productos/{{producto_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"negocios",
								"00000000-0000-0000-0000-000000000000",
								"productos",
								"{{producto_id}}"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Obtener un producto de  un negocio",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/negocios/{{negocio_id}}/productos/{{producto_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"negocios",
						"{{negocio_id}}",
						"productos",
						"{{producto_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Obtener un producto de  un negocio",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n            \"id\": \"37461718\",\r\n            \"nombre\": \"Huevos ecologicos\",\r\n            \"precio\": 20,\r\n            \"stock\": 70,\r\n            \"categoria\": \"Alimentos\",\r\n            \"imagen\": \"www.imagenHuevos.com/huevos.png\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/negocios/{{negocio_id}}/productos/{{producto_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"negocios",
								"{{negocio_id}}",
								"productos",
								"{{producto_id}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Obtener un producto que no existe de un negocio",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El producto con el id dado no fue encontrado\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/negocios/{{negocio_id}}/productos/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"negocios",
						"{{negocio_id}}",
						"productos",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Obtener un producto que no existe de un negocio",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"statusCode\": 404,\r\n   \"message\": \"El producto no existe\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/negocios/{{negocio_id}}/productos/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"negocios",
								"{{negocio_id}}",
								"productos",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Obtener un producto de un negocio que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El negocio con el id dado no fue encontrado\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/negocios/00000000-0000-0000-0000-000000000000/productos/{{producto_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"negocios",
						"00000000-0000-0000-0000-000000000000",
						"productos",
						"{{producto_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Obtener un producto de un negocio que no existe",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"statusCode\": 404,\r\n   \"message\": \"El negocio no existe\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/negocios/00000000-0000-0000-0000-000000000000/productos/{{producto_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"negocios",
								"00000000-0000-0000-0000-000000000000",
								"productos",
								"{{producto_id}}"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Obtener producto que no esta asociado a un negocio",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {\r",
							"   pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El producto con el id dado no esta asociado al negocio\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/negocios/{{negocio_id}}/productos/{{producto_id2}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"negocios",
						"{{negocio_id}}",
						"productos",
						"{{producto_id2}}"
					]
				}
			},
			"response": [
				{
					"name": "Obtener producto que no esta asociado a un negocio",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"statusCode\": 412,\r\n   \"message\": \"El producto no esta asociado a el negocio \"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/negocios/{{negocio_id}}/productos/{{producto_id2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"negocios",
								"{{negocio_id}}",
								"productos",
								"{{producto_id2}}"
							]
						}
					},
					"status": "Precondition Failed",
					"code": 412,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Obtener los productos de un negocio",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/negocios/{{negocio_id}}/productos",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"negocios",
						"{{negocio_id}}",
						"productos"
					]
				}
			},
			"response": [
				{
					"name": "Obtener los productos de un negocio",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n            \"id\": \"37461718\",\r\n            \"nombre\": \"Huevos ecologicos\",\r\n            \"precio\": 20,\r\n            \"stock\": 70,\r\n            \"categoria\": \"Alimentos\",\r\n            \"imagen\": \"www.imagenHuevos.com/huevos.png\"\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/negocios/{{negocio_id}}/productos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"negocios",
								"{{negocio_id}}",
								"productos"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Obtener los productos de un negocio que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El negocio con el id dado no fue encontrado\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/negocios/00000000-0000-0000-0000-000000000000/productos",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"negocios",
						"00000000-0000-0000-0000-000000000000",
						"productos"
					]
				}
			},
			"response": [
				{
					"name": "Obtener los productos de un negocio que no existe",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"statusCode\": 404,\r\n   \"message\": \"El negocio no existe\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/negocios/00000000-0000-0000-0000-000000000000/productos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"negocios",
								"00000000-0000-0000-0000-000000000000",
								"productos"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Actualizar la lista de productos de un negocio",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n    {\r\n        \"id\": \"{{producto_id2}}\"\r\n    }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/negocios/{{negocio_id}}/productos",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"negocios",
						"{{negocio_id}}",
						"productos"
					]
				}
			},
			"response": [
				{
					"name": "Actualizar la lista de productos de un negocio",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"48a9ab90-1276-11ed-861d\",\r\n   \"nombre\": \"FrutiEcologica\",\r\n   \"descripcion\": \"Tienda de frutas ecologica y sostenible con el ambiente.\",\r\n   \"tipo\": \"Alimentos\",\r\n   \"ubicacion\": \"Calle 36 #28-16\",\r\n   \"fechaCreacion\": \"20 de Agosto del 2022\",\r\n   \"productos\":[\r\n        {\r\n            \"id\": \"37461718\",\r\n            \"nombre\": \"Huevos ecologicos\",\r\n            \"precio\": 20,\r\n            \"stock\": 70,\r\n            \"categoria\": \"Alimentos\",\r\n            \"imagen\": \"www.imagenHuevos.com/huevos.png\"\r\n        },\r\n                {\r\n            \"id\": \"7777777\",\r\n            \"nombre\": \"Huevos ecologicos 2\",\r\n            \"precio\": 20,\r\n            \"stock\": 70,\r\n            \"categoria\": \"Alimentos\",\r\n            \"imagen\": \"www.imagenHuevos.com/huevos.png\"\r\n        }\r\n   ],\r\n   \"eventos\": []\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/negocios/{{negocio_id}}/productos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"negocios",
								"{{negocio_id}}",
								"productos"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Actualizar la lista con productos que no existen",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El producto con el id dado no fue encontrado\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n    {\r\n        \"id\": \"00000000-0000-0000-0000-000000000000\"\r\n    }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/negocios/{{negocio_id}}/productos",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"negocios",
						"{{negocio_id}}",
						"productos"
					]
				}
			},
			"response": [
				{
					"name": "Actualizar la lista con productos que no existen",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"statusCode\": 404,\r\n   \"message\": \"El producto no existe\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/negocios/{{negocio_id}}/productos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"negocios",
								"{{negocio_id}}",
								"productos"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Actualizar los productos de un negocio que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El negocio con el id dado no fue encontrado\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[{\r\n    \"id\":\"{{producto_id2}}\"\r\n}]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/negocios/00000000-0000-0000-0000-000000000000/productos",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"negocios",
						"00000000-0000-0000-0000-000000000000",
						"productos"
					]
				}
			},
			"response": [
				{
					"name": "Actualizar los productos de un negocio que no existe",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"statusCode\": 404,\r\n   \"message\": \"El negocio no existe\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/negocios/00000000-0000-0000-0000-000000000000/productos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"negocios",
								"00000000-0000-0000-0000-000000000000",
								"productos"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Borrar un producto de un negocio",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"   pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/negocios/{{negocio_id}}/productos/{{producto_id2}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"negocios",
						"{{negocio_id}}",
						"productos",
						"{{producto_id2}}"
					]
				}
			},
			"response": [
				{
					"name": "Borrar un producto de un negocio",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/negocios/{{negocio_id}}/productos/{{producto_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"negocios",
								"{{negocio_id}}",
								"productos",
								"{{producto_id}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Borrar un producto que no existe de un negocio",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El producto con el id dado no fue encontrado\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/negocios/{{negocio_id}}/productos/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"negocios",
						"{{negocio_id}}",
						"productos",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Borrar un producto que no existe de un negocio",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"statusCode\": 404,\r\n   \"message\": \"El producto no existe\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/negocios/{{negocio_id}}/productos/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"negocios",
								"{{negocio_id}}",
								"productos",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Borrar un producto de un negocio que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El negocio con el id dado no fue encontrado\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/negocios/00000000-0000-0000-0000-000000000000/productos/{{producto_id2}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"negocios",
						"00000000-0000-0000-0000-000000000000",
						"productos",
						"{{producto_id2}}"
					]
				}
			},
			"response": [
				{
					"name": "Borrar un producto de un negocio que no existe",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"statusCode\": 404,\r\n   \"message\": \"El negocio no existe\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/negocios/00000000-0000-0000-0000-000000000000/productos/{{producto_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"negocios",
								"00000000-0000-0000-0000-000000000000",
								"productos",
								"{{producto_id}}"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Borrar un producto que no esta asociado al negocio",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {\r",
							"   pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El producto con el id dado no esta asociado al negocio\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/negocios/{{negocio_id}}/productos/{{producto_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"negocios",
						"{{negocio_id}}",
						"productos",
						"{{producto_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Borrar un producto que no esta asociado al negocio",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"statusCode\": 412,\r\n   \"message\": \"El producto no esta asociado al negocio\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/negocios/{{negocio_id}}/productos/{{producto_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"negocios",
								"{{negocio_id}}",
								"productos",
								"{{producto_id}}"
							]
						}
					},
					"status": "Precondition Failed",
					"code": 412,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Borrar un producto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"   pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/productos/{{producto_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"productos",
						"{{producto_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Borrar un producto",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/productos/{{producto_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"productos",
								"{{producto_id}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Borrar un producto 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"   pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/productos/{{producto_id2}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"productos",
						"{{producto_id2}}"
					]
				}
			},
			"response": [
				{
					"name": "Borrar un producto",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/productos/{{producto_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"productos",
								"{{producto_id}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Borrar un negocio",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"   pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/negocios/{{negocio_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"negocios",
						"{{negocio_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Borrar un negocio",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/negocios/{{negocio_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"negocios",
								"{{negocio_id}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000/api/v1",
			"type": "string"
		}
	]
}